options:
  docker: true

clone:
  depth: full

definitions:
  steps:
    - step: &Build
        name: Create Docker image
        image: python:3.8
        services:
          - docker
        caches:
          - docker
          - pip
        script:
          - export PYTHONPATH=$PYTHONPATH:$PWD
          - export DOCKER_CLIENT_TIMEOUT=120
          - export COMPOSE_HTTP_TIMEOUT=120
          - export BITBUCKET_PROJECT_KEY="${BITBUCKET_PROJECT_KEY,,}"
          - docker login $DOCKER_REG -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          - docker build -t $DOCKER_REG/$BITBUCKET_PROJECT_KEY/$BITBUCKET_BRANCH/$BITBUCKET_REPO_SLUG:latest .
          - docker push $DOCKER_REG/$BITBUCKET_PROJECT_KEY/$BITBUCKET_BRANCH/$BITBUCKET_REPO_SLUG:latest

    - step: &Deploy
        name: Restart compose network
        script:
#          - git clone -b $BITBUCKET_BRANCH git@bitbucket.org:liis_software/simpleoffice-deploy.git $BITBUCKET_BRANCH
          - ssh -o StrictHostKeyChecking=no $USER@$SERVER "mkdir -p ~/bitbucket/$BITBUCKET_PROJECT_KEY/$BITBUCKET_BRANCH"
          - ssh -o StrictHostKeyChecking=no $USER@$SERVER "rm -rf ~/bitbucket/$BITBUCKET_PROJECT_KEY/$BITBUCKET_BRANCH/*"
          - rsync -au --relative -e "ssh -o StrictHostKeyChecking=no" $BITBUCKET_BRANCH $USER@$SERVER:~/bitbucket/$BITBUCKET_PROJECT_KEY
          - ssh -o StrictHostKeyChecking=no $USER@$SERVER "echo $DOCKER_PASSWORD
            | docker login --username=$DOCKER_USERNAME --password-stdin $DOCKER_REG
            && cd ~/bitbucket/$BITBUCKET_PROJECT_KEY/$BITBUCKET_BRANCH
            && docker-compose pull;
            docker network prune -f && docker-compose down;
            docker-compose up -d"

    - step: &Compile
      name: Compile
      image: python:3.8
      script:
        - pip install --user -r requirements.txt
        - pip install pyarmor
        - pyarmor obfuscate --src="." --exclude venv -r --output=/var/distribute manage.py
        - find . -name '*.py' -type f -delete
        - cp -rf . /var/distribute
        - tar -cvf api-test.tar /var/distribute
        - pipe: atlassian/bitbucket-upload-file:0.1.2
          variables:
            BITBUCKET_USERNAME: $BITBUCKET_USERNAME
            BITBUCKET_APP_PASSWORD: $BITBUCKET_APP_PASSWORD
            FILENAME: "api-test.tar"

pipelines:
  branches:
    compile:
      - step: *Compile

    master:
      - step: *Build
      - step: *Deploy

    prod_gpn:
      - step: *Build
      - step: *Deploy